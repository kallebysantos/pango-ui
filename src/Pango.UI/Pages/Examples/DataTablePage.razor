@page "/data-table"

@inject NavigationManager Nav

<section class="h-full flex-1 flex flex-col items-center justify-center">
  <div class="flex-1 grid grid-cols-1 w-full md:grid-cols-2 lg:max-w-5xl gap-8 p-6">
    <div>
      <Tabs DefaultValue="preview" Variant=@(Tabs.Variants.Underline)>
        <TabsList>
          <TabsTrigger Value="preview">Preview</TabsTrigger>
          <TabsTrigger Value="code">Code</TabsTrigger>
        </TabsList>

        <TabsContent Value="preview" class="flex flex-col gap-8 px-4 py-8 items-center border">
          <DataTable Items=@(people) Pagination=@(pagination)>
            <PropertyColumn Property="@(p => p.PersonId)" Sortable=@(true) />
            <PropertyColumn Property="@(p => p.Name)" Sortable=@(true) />
            <PropertyColumn Property="@(p => p.PromotionDate)" Format="yyyy-MM-dd" Sortable=@(true) />
          </DataTable>

          <DataTablePagination State=@(pagination) PageUrl=@(PageUrl) />
        </TabsContent>
        <TabsContent Value="code" class="flex flex-col gap-4 items-center">
          <Code Language="razor" class="[&_pre]:max-h-80">
            @(DataTableCodeExample)
          </Code>
        </TabsContent>
      </Tabs>
    </div>

    <div class="flex flex-col gap-4">
      <div class="flex flex-col gap-2">
        <div class="flex flex-col gap-2">
          <h2 class="pb-2 border-b text-xl leading-snug font-semibold tracking-tight">
            Installation
          </h2>

          <Code Language="fish" class="py-2">dotnet pango add data-table</Code>
        </div>

        <div class="flex flex-col gap-2">
          <p class="leading-relaxed">
            Then add it to <code
              class="relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm">.csproj</code> file:
          </p>

          <Code Language="xml" class="py-2">@(SetupExample)</Code>
        </div>
      </div>

      <header class="flex flex-col gap-2">
        <h2 class="text-xl font-medium">API Reference</h2>
        <h1 class="flex gap-1 text-2xl font-bold">
          <span>DataTable - QuickGrid</span>
          <a class="hover:underline" href="https://learn.microsoft.com/en-us/aspnet/core/blazor/components/quickgrid"
            target="_blank">
            <i class="ph ph-arrow-square-out"></i>
          </a>
        </h1>
      </header>

      <div>
        Powerful table and datagrids built using QuickGrid.
      </div>
    </div>
  </div>
</section>

@code {

  [SupplyParameterFromQuery]
  public string? Page { get; set; }

  PaginationState pagination = new PaginationState { ItemsPerPage = 2 };

  protected override async Task OnParametersSetAsync()
  {
    var isValidNumber = int.TryParse(Page, out var pageIndex);

    await pagination.SetCurrentPageIndexAsync(isValidNumber ? pageIndex : 0);
  }

  private string PageUrl(int page)
  => Nav.GetUriWithQueryParameter("page", page);

  private record Person(int PersonId, string Name, DateOnly PromotionDate);
  private IQueryable<Person> people = new[]
  {
new Person(10895, "Jean Martin", new DateOnly(1985, 3, 16)),
new Person(10944, "Ant√≥nio Langa", new DateOnly(1991, 12, 1)),
new Person(11203, "Julie Smith", new DateOnly(1958, 10, 10)),
new Person(11205, "Nur Sari", new DateOnly(1922, 4, 27)),
new Person(11898, "Jose Hernandez", new DateOnly(2011, 5, 3)),
new Person(12130, "Kenji Sato", new DateOnly(2004, 1, 9)),
}.AsQueryable();
}
