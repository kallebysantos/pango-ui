@namespace Pango.UI.Shared.Docs

@using System.Reflection


@if (Pages.Any())
{
  <nav class="grid grid-cols-1 gap-2 items-center md:grid-flow-col md:grid-rows-6">
    @foreach (var page in Pages)
    {
      <NavLink href=@(page.RelativeURI) class="w-fit">
        <Button Variant=@(Button.Variants.Link)>
          @(page.DisplayName)
        </Button>
      </NavLink>
    }
  </nav>
}

@code {
  [Parameter, EditorRequired]
  public required Type Base { get; set; }

  private List<PageDefinition> Pages = [];

  protected override void OnParametersSet()
  {

    Pages = Assembly.GetExecutingAssembly().GetTypes()
    .Where(t => t.Namespace == Base.Namespace && t.IsSubclassOf(typeof(ComponentBase)))
    .Select(c => new { Type = c, Route = c.GetCustomAttribute<RouteAttribute>() })
    .Where(c => c.Route is not null)
    .Select(c => new PageDefinition(c.Type.Name, c.Route!.Template))
    .OrderBy(c => c.Name)
    .ToList();
  }

  public record struct PageDefinition(string Name, string Route)
  {
    public string DisplayName => Name.EndsWith("Page")
    ? Name.Substring(0, Name.Length - "Page".Length)
    : Name;

    public string RelativeURI => Route.StartsWith("/")
    ? "." + Route
    : Route;
  }
}
