@namespace Pango.UI.Components
@inherits Paginator

<div class=@Tw("flex items-center justify-between px-2", AdditionalAttributes?.GetValueOrDefault("class")?.ToString())>
  @if (State.TotalItemCount.HasValue)
  {
    <div class="text-muted-foreground">
      <span class="font-bold">@(State.TotalItemCount ?? 0)</span> rows
    </div>

    <nav class="flex items-center gap-4">
      <div class="flex items-center gap-2">
        <Button Variant=@(Button.Variants.Outline) Size=@(Button.Sizes.Icon) @onclick="@GoFirstAsync"
          disabled="@(!CanGoBack)">
          <i class="ph ph-caret-double-left @(CanGoBack ? "" : "opacity-60")"></i>
        </Button>
        <Button Variant="Button.Variants.Outline" Size="Button.Sizes.Icon" @onclick="GoPreviousAsync"
          disabled="@(!CanGoBack)">
          <i class="ph ph-caret-left  @(CanGoBack ? "" : "opacity-60")"></i>
        </Button>
      </div>

      <div class="text-muted-foreground">
        Page <span class="font-bold">@(State.CurrentPageIndex + 1)</span> of <span class="font-bold">@(State.LastPageIndex
                  + 1)</span>
    </div>

      <div class="flex items-center gap-2">
        <Button Variant="Button.Variants.Outline" Size="Button.Sizes.Icon" @onclick="GoNextAsync"
          disabled="@(!CanGoForwards)">
          <i class="ph ph-caret-right  @(CanGoForwards ? "" : "opacity-60")"></i>
        </Button>
        <Button Variant="Button.Variants.Outline" Size="Button.Sizes.Icon" @onclick="GoLastAsync"
          disabled="@(!CanGoForwards)">
          <i class="ph ph-caret-double-right @(CanGoForwards ? "" : "opacity-60")"></i>
        </Button>
      </div>
    </nav>
    }
</div>
