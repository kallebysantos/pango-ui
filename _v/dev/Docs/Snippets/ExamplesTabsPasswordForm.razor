@using System.ComponentModel.DataAnnotations

<EditForm Model=@(this) OnValidSubmit=@(HandlePassword) FormName="password-form" Enhance class="flex flex-col gap-4">
  <DataAnnotationsValidator />

  <div class="space-y-2">
    <h3 class="font-semibold leading-none tracking-tight">
      Password
    </h3>
    <p class="text-sm text-muted-foreground">
      Change your password here. After saving, you'll be logged out.
    </p>
  </div>

  <div class="flex flex-col gap-2">
    <label class="flex flex-col gap-1">
      <span class="text-sm font-medium">Current password</span>
      <Input @bind-Value="@(CurrentPassword)" type="password" autocomplete="current-password" />
      <ValidationMessage class="text-sm text-destructive" For=@(() => CurrentPassword) />
    </label>

    <label class="flex flex-col gap-1 text-sm font-medium">
      <span class="text-sm font-medium">New password</span>
      <Input @bind-Value="@(NewPassword)" type="password" autocomplete="new-password" />
      <ValidationMessage class="text-sm text-destructive" For=@(() => NewPassword) />
    </label>
  </div>

  @if (hasPasswordSaved)
  {
    <Alert Variant=@(Alert.Variants.Sucess) OnDismiss=@(() => hasPasswordSaved = false)>
      <AlertSide>
        <i class="ph ph-check text-lg"></i>
      </AlertSide>
      <AlertTitle>Sucess</AlertTitle>
      <AlertDescription>
        Your password was changed.
      </AlertDescription>
    </Alert>
  }

  <Button>Change password</Button>
</EditForm>

@code {
  [Required(ErrorMessage = "You must supply your current password.")]
  public string? CurrentPassword { get; set; }

  [SupplyParameterFromForm]
  [Required(ErrorMessage = "You must supply a new desired password.")]
  public string? NewPassword { get; set; }

  bool hasPasswordSaved;
  protected void HandlePassword()
  {
    hasPasswordSaved = true;
    CurrentPassword = string.Empty;
    NewPassword = string.Empty;
  }
}
